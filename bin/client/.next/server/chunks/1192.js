"use strict";exports.id=1192,exports.ids=[1192],exports.modules={566:(e,t,r)=>{r.a(e,async(e,i)=>{try{r.d(t,{Z:()=>useForm});var a=r(9638),n=r(1044),o=r(6689),l=e([a,n]);function useForm({schema:e,data:t}){let[r,i]=(0,o.useState)(1),[l,s]=(0,o.useState)({}),[d,u]=(0,o.useState)({});(0,o.useEffect)(()=>{t&&s(t)},[t]);let handleValidation=t=>{try{let r=(0,n.Fv)(t,e);if(console.log(r),r.errors?.hasError){(0,a.Jc)("Please verify indicated fields"),u(r.errors.error);return}return r.data}catch(e){(0,a.Jc)("Something went wrong with validation")}},v=(0,o.useCallback)(e=>{{let t=e.target.name,r=e.target.type,i=e.target.required,a=(0,n.Hc)(r,e),o=null!=a&&""!==a;s(e=>({...e,[t]:o?a:void 0})),i&&o&&u(e=>({...e,[t]:""}))}},[]);return{state:l,error:d,formKey:r,setState:s,setError:u,setFormKey:i,handleInput:v,handleValidation,handleSubmit:e=>{let t=handleValidation(l);t&&e(t)},resetForm:e=>{s(t??{}),u({}),i(e=>e+1),e&&(0,a.Qm)(e)}}}[a,n]=l.then?(await l)():l,i()}catch(e){i(e)}})},3467:(e,t,r)=>{r.a(e,async(e,i)=>{try{r.d(t,{G5:()=>stringField,v3:()=>positiveNumberString});var a=r(9926),n=e([a]);a=(n.then?(await n)():n)[0];let positiveNumberString=e=>a.z.string().refine(e=>!isNaN(parseFloat(e)),{message:`${e} must be a positive number.`}),stringField=(e,t=1,r)=>a.z.string({required_error:`${e} is required`,invalid_type_error:"Provide valid type"}).min(t,{message:`${e} is too short`}).refine(e=>!r||e.length<=r,`${e} is too long`);a.z.string({invalid_type_error:"Provide valid type"}).optional().nullable(),a.z.number({invalid_type_error:"Provide valid type"}).optional().nullable(),a.z.boolean({invalid_type_error:"Provide valid type"}).optional().nullable(),a.z.string().refine(e=>!e||!isNaN(+e),{message:"Field must be a positive integer."}).optional(),i()}catch(e){i(e)}})}};